query trackers {
    trackers {
        ...trackers
    }
}

query trackersByUser($username: String!) {
    user(username: $username) {
        trackers {
            ...trackers
        }
    }
}

fragment trackers on TrackerCursor {
    results {
        name
        description
        visibility
    }
}

query trackerIDByName($name: String!) {
    trackerByName(name: $name) {
        id
    }
}

query trackerIDByOwner($owner: String!, $tracker: String!) {
    trackerByOwner(owner: $owner, tracker: $tracker) {
        id
    }
}

query tickets($name: String!) {
    trackerByName(name: $name) {
        tickets {
            ...tickets
        }
    }
}

query ticketsByOwner($owner: String!, $tracker: String!) {
    trackerByOwner(owner: $owner, tracker: $tracker) {
        tickets {
            ...tickets
        }
    }
}
fragment tickets on TicketCursor {
    results {
        id
        subject
        status
        resolution
        created
        submitter {
            canonicalName
        }
        labels {
            name
            backgroundColor
            foregroundColor
        }
    }
}

query labels($name: String!) {
    trackerByName(name: $name) {
        labels {
            ...labels
        }
    }
}

query labelsByOwner($owner: String!, $tracker: String!) {
    trackerByOwner(owner: $owner, tracker: $tracker) {
        labels {
            ...labels
        }
    }
}

fragment labels on LabelCursor {
    results {
        id
        name
        backgroundColor
        foregroundColor
    }
}

query aclByTrackerName($name: String!) {
    trackerByName(name: $name) {
        defaultACL {
            browse
            submit
            comment
            edit
            triage
        }
        acls {
            results {
                id
                created
                entity {
                    canonicalName
                }
                browse
                submit
                comment
                edit
                triage
            }
        }
    }
}

mutation deleteTracker($id: Int!) {
    deleteTracker(id: $id) {
        name
    }
}

mutation submitComment(
    $trackerId: Int!
    $ticketId: Int!
    $input: SubmitCommentInput!
) {
    submitComment(trackerId: $trackerId, ticketId: $ticketId, input: $input) {
        ticket {
            subject
        }
    }
}

mutation updateTicketStatus(
    $trackerId: Int!
    $ticketId: Int!
    $input: UpdateStatusInput!
) {
    updateTicketStatus(
        trackerId: $trackerId
        ticketId: $ticketId
        input: $input
    ) {
        ticket {
            subject
        }
    }
}

mutation deleteLabel($id: Int!) {
    deleteLabel(id: $id) {
        name
    }
}

mutation createLabel(
    $trackerId: Int!
    $name: String!
    $foreground: String!
    $background: String!
) {
    createLabel(
        trackerId: $trackerId
        name: $name
        foreground: $foreground
        background: $background
    ) {
        name
        backgroundColor
        foregroundColor
    }
}

mutation deleteACL($id: Int!) {
    deleteACL(id: $id) {
        tracker {
            name
        }
        entity {
            canonicalName
        }
    }
}

mutation trackerSubscribe($trackerId: Int!) {
    trackerSubscribe(trackerId: $trackerId) {
        tracker {
            name
            owner {
                canonicalName
            }
        }
    }
}

mutation trackerUnsubscribe($trackerId: Int!) {
    # TODO: Wait for API to implement "tickets"
    trackerUnsubscribe(trackerId: $trackerId, tickets: false) {
        tracker {
            name
            owner {
                canonicalName
            }
        }
    }
}

mutation ticketSubscribe($trackerId: Int!, $ticketId: Int!) {
    ticketSubscribe(trackerId: $trackerId, ticketId: $ticketId) {
        ticket {
            id
        }
    }
}
