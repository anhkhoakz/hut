query repositoryIDByName($name: String!) {
    me {
        repository(name: $name) {
            id
        }
    }
}

query repositoryIDByUser($username: String!, $name: String!) {
    user(username: $username) {
        repository(name: $name) {
            id
        }
    }
}

query repositories {
    repositories {
        ...repos
    }
}

query repositoriesByUser($username: String!) {
    user(username: $username) {
        repositories {
            ...repos
        }
    }
}

fragment repos on RepositoryCursor {
    results {
        name
        description
        visibility
    }
}

query userWebhooks {
    userWebhooks {
        results {
            id
            events
            query
            url
        }
    }
}

mutation createRepository(
    $name: String!
    $visibility: Visibility!
    $description: String!
) {
    createRepository(
        name: $name
        visibility: $visibility
        description: $description
    ) {
        name
    }
}

mutation deleteRepository($id: Int!) {
    deleteRepository(id: $id) {
        name
    }
}

mutation createUserWebhook($config: UserWebhookInput!) {
    createWebhook(config: $config) {
        id
    }
}

mutation deleteUserWebhook($id: Int!) {
    deleteWebhook(id: $id) {
        id
    }
}
