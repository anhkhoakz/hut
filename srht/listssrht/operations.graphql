mutation deleteMailingList($id: Int!) {
    deleteMailingList(id: $id) {
        name
    }
}

query mailingLists {
    mailingLists {
        ...lists
    }
}

query mailingListsByUser($username: String!) {
    userByName(username: $username) {
        lists {
            ...lists
        }
    }
}

fragment lists on MailingListCursor {
    results {
        name
        description
        visibility
    }
}

query mailingListIDByName($name: String!) {
    mailingListByName(name: $name) {
        id
    }
}

query mailingListIDByOwner($ownerName: String!, $listName: String!) {
    mailingListByOwner(ownerName: $ownerName, listName: $listName) {
        id
    }
}

query patches($name: String!) {
    mailingListByName(name: $name) {
        ...patchsetsByList
    }
}

query patchesByOwner($ownerName: String!, $listName: String!) {
    mailingListByOwner(ownerName: $ownerName, listName: $listName) {
        ...patchsetsByList
    }
}

fragment patchsetsByList on MailingList {
    patches {
        results {
            id
            subject
            status
            created
            version
            prefix
            submitter {
                canonicalName
            }
        }
    }
}

query patchesByMe {
    me {
        ...patchsets
    }
}

query patchesByUser($username: String!) {
    userByName(username: $username) {
        ...patchsets
    }
}

fragment patchsets on User {
    patches {
        results {
            id
            subject
            status
            created
            version
            prefix
            list {
                name
                owner {
                    canonicalName
                }
            }
        }
    }
}

query patchsetById($id: Int!) {
    patchset(id: $id) {
        patches {
            results {
                date
                body
                subject
                header(want: "From")
            }
        }
    }
}

query completePatchsetId($name: String!) {
    mailingListByName(name: $name) {
        ...completePatchset
    }
}

query completePatchsetIdByOwner($ownerName: String!, $listName: String!) {
    mailingListByOwner(ownerName: $ownerName, listName: $listName) {
        ...completePatchset
    }
}

fragment completePatchset on MailingList {
    patches {
        results {
            id
            subject
            status
            version
            prefix
        }
    }
}

query aclByListName($name: String!) {
    mailingListByName(name: $name) {
        defaultACL {
            browse
            reply
            post
            moderate
        }
        acl {
            results {
                id
                created
                entity {
                    canonicalName
                }
                browse
                reply
                post
                moderate
            }
        }
    }
}

mutation mailingListSubscribe($listID: Int!) {
    mailingListSubscribe(listID: $listID) {
        list {
            name
            owner {
                canonicalName
            }
        }
    }
}

mutation mailingListUnsubscribe($listID: Int!) {
    mailingListUnsubscribe(listID: $listID) {
        list {
            name
            owner {
                canonicalName
            }
        }
    }
}

mutation updatePatchset($id: Int!, $status: PatchsetStatus!) {
    updatePatchset(id: $id, status: $status) {
        submitter {
            canonicalName
        }
        subject
    }
}

mutation deleteACL($id: Int!) {
    deleteACL(id: $id) {
        entity {
            canonicalName
        }
        list {
            name
        }
    }
}

mutation createMailingList(
    $name: String!
    $description: String
    $visibility: Visibility!
) {
    createMailingList(
        name: $name
        description: $description
        visibility: $visibility
    ) {
        name
    }
}
